/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M18
 * Generated at: 2017-12-04 03:41:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class select_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("\r\n");
      out.write("<title>记录查询</title>\r\n");
      out.write(" <script type=\"text/javascript\" src=\"JS/jquery-1.4.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("请输入账号：\r\n");
      out.write("<input type=\"text\" id=\"num\">\r\n");
      out.write("<input type=\"button\" id=\"btnSelect\" value=\"点击查询\">\r\n");
      out.write("\r\n");
      out.write("<table cellspacing=\"0\" border=\"1\" id=\"table-result\" style=\"border-collapse:collapse;\">  \r\n");
      out.write("       <thead id=\"title\"></thead> \r\n");
      out.write("       \r\n");
      out.write("        <tbody id=\"tbody-result\"> \r\n");
      out.write("   \r\n");
      out.write("        </tbody>  \r\n");
      out.write("    </table>  \r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\t $(\"#btnSelect\").click(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar num=$(\"#num\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(num==\"\"){\r\n");
      out.write("\t\t\talert(\"查询账号不能为空！\");return;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t var aj = $.ajax({\r\n");
      out.write("\r\n");
      out.write("\t\t\t     type: 'POST',\r\n");
      out.write("\r\n");
      out.write("\t\t\t     url: 'SelectByNum' ,\r\n");
      out.write("\r\n");
      out.write("\t\t\t    data: {num:num},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\r\n");
      out.write("\t\t\t    success: function (data) {\r\n");
      out.write("\t\t\t    \tif(data==\"{user:[]}\"){\r\n");
      out.write("\t\t\t    \t\talert(\"不存在相关账号的信息！\");return;\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t    \tvar dataobj = eval(\"(\" + data + \")\"); //转换为json对象\r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("                    var strTableHtml = \"\";\r\n");
      out.write("                    var strTableHtml1 = \"   <tr>   <th>姓名</th>  <th>账号</th>   <th>密码</th>  <th>年龄</th> <th>性别</th>    <th>爱好</th> <th>省</th>  <th>市</th> </tr>   \";\r\n");
      out.write("                    //遍历查询到的列表\r\n");
      out.write("                    $.each(dataobj.user, function (i, item) {    \r\n");
      out.write("                    \t\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<tr>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.name + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.num + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.password + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.age + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.sex + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.hobby + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.sheng + \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"<td>\" + item.shi+ \"</td>\";\r\n");
      out.write("                        strTableHtml = strTableHtml + \"</tr>\";  \r\n");
      out.write("                    });\r\n");
      out.write("                   $(\"#title\").html(\"\");\r\n");
      out.write("                   $(\"#tbody-result\").html(\"\");\r\n");
      out.write("        \r\n");
      out.write("                    $(\"#title\").append(strTableHtml1);\r\n");
      out.write("                    $(\"#tbody-result\").append(strTableHtml);\r\n");
      out.write("                   \r\n");
      out.write("                },\r\n");
      out.write("                error: function (data) {\r\n");
      out.write("                    alert(data);\r\n");
      out.write("                }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
