/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M18
 * Generated at: 2018-01-09 02:55:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NewFile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1512821225038L));
    _jspx_dependants.put("jar:file:/F:/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web20/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>验证码</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\" type=\"text/css\" />\r\n");
      out.write("<script src=\"js/jquery-1.11.3.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<!-- 引入自定义css文件 style.css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\">  \r\n");
      out.write("        $(function(){  \r\n");
      out.write("            $(\"#getCode\").removeAttr(\"disabled\");  \r\n");
      out.write("            //发送验证码  \r\n");
      out.write("            $(\"#getCode\").click(function(){   \r\n");
      out.write("                $.ajax({  \r\n");
      out.write("                    url:\"message\",  \r\n");
      out.write("                    data:{  \r\n");
      out.write("                        \"phone\":$(\"#phone\").val()  \r\n");
      out.write("                    },  \r\n");
      out.write("                    type:\"post\",  \r\n");
      out.write("                    async:false,  \r\n");
      out.write("                    dataType:\"text\",  \r\n");
      out.write("                    success : function(data) {  \r\n");
      out.write("                        if(data=='true'){  \r\n");
      out.write("                            alert(\"验证码发送成功，收到后请输入验证码\");  \r\n");
      out.write("                            time(this);  \r\n");
      out.write("                        } else {  \r\n");
      out.write("                            alert(\"验证码发送失败\");  \r\n");
      out.write("                        }  \r\n");
      out.write("                    },  \r\n");
      out.write("                    error : function() {  \r\n");
      out.write("                        alert(\"error\");  \r\n");
      out.write("                    }  \r\n");
      out.write("                });  \r\n");
      out.write("            });  \r\n");
      out.write("            //验证  \r\n");
      out.write("            $(\"#validate\").click(function(){      \r\n");
      out.write("                $.ajax({  \r\n");
      out.write("                    url:\"code\",  \r\n");
      out.write("                    data:{  \r\n");
      out.write("                        \"code\":$(\"#code\").val()  \r\n");
      out.write("                    },  \r\n");
      out.write("                    type:\"post\",  \r\n");
      out.write("                    async:false,  \r\n");
      out.write("                    dataType:\"text\",  \r\n");
      out.write("                    success : function(data) {  \r\n");
      out.write("                        if(data=='true'){  \r\n");
      out.write("                            alert(\"恭喜您，验证成功\");  \r\n");
      out.write("                        } else {  \r\n");
      out.write("                            alert(\"验证失败\");  \r\n");
      out.write("                        }  \r\n");
      out.write("                    },  \r\n");
      out.write("                    error : function() {  \r\n");
      out.write("                        alert(\"error\");  \r\n");
      out.write("                    }  \r\n");
      out.write("                });  \r\n");
      out.write("            });  \r\n");
      out.write("        })  \r\n");
      out.write("          \r\n");
      out.write("        //验证码倒计时  \r\n");
      out.write("        var wait = 60;  \r\n");
      out.write("        function time(obj) {  \r\n");
      out.write("            if(wait==0) {  \r\n");
      out.write("                $(\"#getCode\").removeAttr(\"disabled\");  \r\n");
      out.write("                $(\"#getCode\").val(\"获取验证码\");  \r\n");
      out.write("                wait = 60;  \r\n");
      out.write("            }else {  \r\n");
      out.write("                $(\"#getCode\").attr(\"disabled\",\"true\");  \r\n");
      out.write("                $(\"#getCode\").val(wait+\"秒后重试\");  \r\n");
      out.write("                wait--;  \r\n");
      out.write("                setTimeout(function() {     //倒计时方法  \r\n");
      out.write("                    time(obj);  \r\n");
      out.write("                },1000);    //间隔为1s  \r\n");
      out.write("            }  \r\n");
      out.write("        }  \r\n");
      out.write("    </script>  \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<input type=\"text\" id=\"phone\" placeholder=\"请输入手机号码\"><input id=\"getCode\" type=\"button\" value=\"获取验证码\"><br>  \r\n");
      out.write("    <input type=\"text\" id=\"code\" placeholder=\"6位验证码\"><input id=\"validate\" type=\"button\" value=\"验证\">  \r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
